AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  HelloWorldApi:
    Type: AWS::Serverless::Api
    Auth:
      ApiKeyRequired: false
    Properties:
      StageName: Dev
      DefinitionBody: 
        swagger: "2.0"
        basePath: "/Dev"
        paths:
          /hello:
            post:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
              x-amazon-apigateway-integration:
                type: "aws"
                httpMethod: "POST"
                uri: 
                  Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations'                
                responses:
                  default:
                    statusCode: "200"
                    responseTemplates:
                      application/json: "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n\
                        ##  This template will pass through all parameters including path,\
                        \ querystring, header, stage variables, and context through to the\
                        \ integration endpoint via the body/payload\n#set($allParams = $input.params())\n\
                        {\n\"body-json\" : $input.json('$'),\n\"params\" : {\n#foreach($type\
                        \ in $allParams.keySet())\n    #set($params = $allParams.get($type))\n\
                        \"$type\" : {\n    #foreach($paramName in $params.keySet())\n    \"\
                        $paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\
                        \n        #if($foreach.hasNext),#end\n    #end\n}\n    #if($foreach.hasNext),#end\n\
                        #end\n},\n\"stage-variables\" : {\n#foreach($key in $stageVariables.keySet())\n\
                        \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n\
                        \    #if($foreach.hasNext),#end\n#end\n},\n\"context\" : {\n    \"\
                        account-id\" : \"$context.identity.accountId\",\n    \"api-id\" :\
                        \ \"$context.apiId\",\n    \"api-key\" : \"$context.identity.apiKey\"\
                        ,\n    \"authorizer-principal-id\" : \"$context.authorizer.principalId\"\
                        ,\n    \"caller\" : \"$context.identity.caller\",\n    \"cognito-authentication-provider\"\
                        \ : \"$context.identity.cognitoAuthenticationProvider\",\n    \"cognito-authentication-type\"\
                        \ : \"$context.identity.cognitoAuthenticationType\",\n    \"cognito-identity-id\"\
                        \ : \"$context.identity.cognitoIdentityId\",\n    \"cognito-identity-pool-id\"\
                        \ : \"$context.identity.cognitoIdentityPoolId\",\n    \"http-method\"\
                        \ : \"$context.httpMethod\",\n    \"stage\" : \"$context.stage\",\n\
                        \    \"source-ip\" : \"$context.identity.sourceIp\",\n    \"user\"\
                        \ : \"$context.identity.user\",\n    \"user-agent\" : \"$context.identity.userAgent\"\
                        ,\n    \"user-arn\" : \"$context.identity.userArn\",\n    \"request-id\"\
                        \ : \"$context.requestId\",\n    \"resource-id\" : \"$context.resourceId\"\
                        ,\n    \"resource-path\" : \"$context.resourcePath\"\n    }\n}\n"
                requestTemplates:
                  application/json: "{\n    \"body\": $input.json(\"$\")\n}"
                passthroughBehavior: "when_no_templates"

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: post
            RestApiId: !Ref HelloWorldApi

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${HelloWorldApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
